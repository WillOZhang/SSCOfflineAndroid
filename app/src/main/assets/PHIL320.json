{"reqs":"Pre-reqs: PHIL 220.\nThe two major topics of this course are computability theory and basic to intermediate metalogic. The first part elaborates what it means for a function to be computable employing two different approaches to computability: Turing machines and recursive functions. We demonstrate that these definitions of a computable function are equivalent: any function that counts as computable on one of the definitions also counts as computable on the other. This equivalence result provides some support for Churchs Thesis (the claim that all effectively computable functions are recursive functions). The second part develops some of the main ideas of basic to intermediate (meta)logic. Here, rather than doing proofs within a given system of predicate logic, our principal goal is to prove important factsand~\nabout our system of predicate logic itself. It includes the study of the systems syntax (the language and formation rules for formulas of predicate logic), semantics (the definition of valid (logically true) formulas in terms of interpretations), model theory (the notion of interpretations and models for sets of sentences and prove some important facts about models), proof theory (the definition of valid formulas in terms of deductions), as well as some other systems important properties (the soundness and completeness theorems, the undecidability of first-order predicate logic, the (downward) Lowenheim-Skolem theorem and the compactness theorem).\n","courseName":"Logic: Metatheory and Computability","courseNumber":"320","credits":"Credits: 3","description":"Continuation of PHIL 220. A system of deduction for predicate logic is selected for further study. Completeness of this system and other metatheoretic results are proved. Other topics include computability, recursive function theory, incompleteness and decidability.","sections":[{"section":"001"}]}